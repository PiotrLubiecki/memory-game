{"version":3,"sources":["components/Header.js","components/Scoreboard.js","components/Card.js","components/MainContent.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Scoreboard","props","id","className","currentScore","topScore","Card","animalName","value","replace","style","backgroundImage","MainContent","animals","useState","setCurrentScore","setTopScore","card1","setCard1","card2","setCard2","card3","setCard3","animalsNotGuessed","setAnimalsNotGuessed","animalsGuessed","setAnimalsGuessed","resultText1","setResultText1","resultText2","setResultText2","drawAnimals","tmpAnimal2","tmpAnimal3","tmpAnimal1","Math","floor","random","length","includes","index","playRound","selectedAnimal","messageDisplay","tmpScore","score","localStorage","setItem","checkScore","cardDivs","document","querySelectorAll","forEach","cardDiv","classList","add","remove","setTimeout","concat","filter","x","newGame","message","querySelector","card","useEffect","storedTopScore","getItem","onClick","type","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2TAWeA,MARf,WACE,OACE,iCACE,oD,aCUSC,MAbf,SAAoBC,GAClB,OACE,sBAAKC,GAAG,aAAR,UACE,sBAAKC,UAAU,qBAAf,UACE,uCADF,IACiBF,EAAMG,gBAEvB,sBAAKD,UAAU,qBAAf,UACE,2CADF,IACqBF,EAAMI,gB,MCQlBC,MAff,SAAcL,GACZ,IAAMM,EAAaN,EAAMO,MAAMC,QAAQ,KAAM,KAAKA,QAAQ,OAAvC,KACnB,OACE,sBAAKN,UAAU,OAAf,UACE,qBACEA,UAAU,aACVO,MAAO,CACLC,gBAAgB,sBAAD,OAAwBV,EAAMO,MAA9B,YAGnB,qBAAKL,UAAU,YAAf,SAA4BI,Q,MCgSnBK,MAxSf,WACE,IAAMC,EAAU,CACd,WACA,WACA,QACA,gBACA,mBACA,qBACA,sBACA,mBACA,UACA,gBACA,gBACA,sBACA,mBACA,cACA,mBACA,kBACA,QACA,SACA,iBACA,cACA,UACA,iBACA,WACA,UACA,UACA,aACA,oBACA,eACA,SACA,QACA,YACA,SACA,SACA,cACA,QACA,iBACA,iBACA,iBACA,WACA,SACA,aACA,QACA,qBACA,SACA,UACA,QACA,UACA,iBACA,UACA,cACA,UACA,mBACA,iBACA,kBACA,UACA,QACA,mBACA,QACA,SACA,eACA,QACA,SACA,QACA,QACA,MACA,OACA,YACA,SACA,UACA,OACA,uBACA,SACA,WACA,UACA,cACA,QACA,QACA,eACA,QACA,eACA,QACA,cACA,sBACA,iBACA,gBACA,gBACA,mBACA,oBACA,uBACA,kBACA,iBACA,WACA,uBACA,SACA,YACA,mBACA,oBACA,iBACA,gBACA,uBACA,YACA,aACA,WACA,gBACA,kBACA,sBACA,UACA,YACA,mBACA,uBACA,eAEF,EAAwCC,mBAAS,GAAjD,mBAAOV,EAAP,KAAqBW,EAArB,KACA,EAAgCD,mBAAS,GAAzC,mBAAOT,EAAP,KAAiBW,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAC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","file":"static/js/main.1b71a8ef.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/Header.css';\n\nfunction Header() {\n  return (\n    <header>\n      <p>Memory Card Game</p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './styles/Scoreboard.css';\n\nfunction Scoreboard(props) {\n  return (\n    <div id=\"scoreboard\">\n      <div className=\"scoreboard-display\">\n        <p>Score:</p> {props.currentScore}\n      </div>\n      <div className=\"scoreboard-display\">\n        <p>Top Score:</p> {props.topScore}\n      </div>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import React from 'react';\nimport './styles/Card.css';\n\nfunction Card(props) {\n  const animalName = props.value.replace(/_/g, ' ').replace(/123/g, `'`);\n  return (\n    <div className=\"card\">\n      <div\n        className=\"card-image\"\n        style={{\n          backgroundImage: `url(./animalImages/${props.value}.jpg)`,\n        }}\n      ></div>\n      <div className=\"card-text\">{animalName}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport Scoreboard from './Scoreboard';\nimport Card from './Card';\nimport './styles/MainContent.css';\n\nfunction MainContent() {\n  const animals = [\n    'Aardvark',\n    'Aardwolf',\n    'Addax',\n    'African_Civet',\n    'African_Elephant',\n    'African_Golden_Cat',\n    'African_Golden_Wolf',\n    'African_Wild_Ass',\n    'Aye-aye',\n    'Barbary_Sheep',\n    'Bat-eared_Fox',\n    'Black-backed_Jackal',\n    'Black-footed_Cat',\n    'Black_Rhino',\n    'Black_Wildebeest',\n    'Blue_Wildebeest',\n    'Bongo',\n    'Bonobo',\n    'Brown-fur_Seal',\n    'Brown_Hyena',\n    'Buffalo',\n    'Bunyoro_Rabbit',\n    'Cape_Fox',\n    'Caracal',\n    'Cheetah',\n    'Chimpanzee',\n    'Crested_Porcupine',\n    'Dama_Gazelle',\n    'Dikdik',\n    'Drill',\n    'Dromedary',\n    'Dugong',\n    'Duiker',\n    'Dwarf_Lemur',\n    'Eland',\n    'Elephant_Shrew',\n    'Ethiopian_Hare',\n    'Ethiopian_Wolf',\n    'Falanouc',\n    'Fennec',\n    'Forest_Hog',\n    'Fossa',\n    'Four-toed_Hedgehog',\n    'Gelada',\n    'Gemsbok',\n    'Genet',\n    'Gerenuk',\n    'Giant_Pangolin',\n    'Giraffe',\n    'Golden_Mole',\n    'Gorilla',\n    'Greater_Cane_Rat',\n    'Greater_Galago',\n    'Grevy123s_Zebra',\n    'Grysbok',\n    'Gundi',\n    'Hamadryas_Baboon',\n    'Hippo',\n    'Hirola',\n    'Honey_Badger',\n    'Hyrax',\n    'Impala',\n    'Indri',\n    'Kewel',\n    'Kob',\n    'Kudu',\n    'Kusimanse',\n    'Lechwe',\n    'Leopard',\n    'Lion',\n    'Long-tailed_Pangolin',\n    'Lycaon',\n    'Mandrill',\n    'Meerkat',\n    'Nubian_Ibex',\n    'Nyala',\n    'Okapi',\n    'Olive_Baboon',\n    'Oribi',\n    'Plains_Zebra',\n    'Potto',\n    'Pygmy_Hippo',\n    'Red-fronted_Gazelle',\n    'Red_Hartebeest',\n    'Red_River_Hog',\n    'Red_Rock_Hare',\n    'Red-ruffed_Lemur',\n    'Ring-tailed_Lemur',\n    'Ring-tailed_Vontsira',\n    'Riverine_Rabbit',\n    'Sable_Antelope',\n    'Sand_Cat',\n    'Scimitar-horned_Oryx',\n    'Serval',\n    'Sitatunga',\n    'Slender_Mongoose',\n    'Southern_Reedbuck',\n    'Sportive_Lemur',\n    'Spotted_Hyena',\n    'Spotted-necked_Otter',\n    'Springbok',\n    'Springhare',\n    'Steenbok',\n    'Striped_Hyena',\n    'Striped_Polecat',\n    'Thomson123s_Gazelle',\n    'Warthog',\n    'Waterbuck',\n    'Water_Chevrotain',\n    'West_African_Manatee',\n    'White_Rhino',\n  ];\n  const [currentScore, setCurrentScore] = useState(0);\n  const [topScore, setTopScore] = useState(0);\n  const [card1, setCard1] = useState('');\n  const [card2, setCard2] = useState('');\n  const [card3, setCard3] = useState('');\n  const [animalsNotGuessed, setAnimalsNotGuessed] = useState(animals);\n  const [animalsGuessed, setAnimalsGuessed] = useState([]);\n  const [resultText1, setResultText1] = useState('Sorry :(');\n  const [resultText2, setResultText2] = useState('You lost');\n\n  useEffect(() => {\n    const cardDivs = document.querySelectorAll('.card-div');\n    cardDivs.forEach((cardDiv) => {\n      cardDiv.classList.add('showup');\n    });\n    drawAnimals();\n    const storedTopScore = localStorage.getItem('topScore') || 0;\n    setTopScore(storedTopScore);\n  }, []); // [] makes useEffect to run only once, when the page loads\n\n  useEffect(() => {\n    if (animalsNotGuessed.length !== 0) {\n      drawAnimals();\n    }\n  }, [animalsNotGuessed]); //runs when animalsNotGuessed updates\n\n  function drawAnimals() {\n    let tmpAnimal1 = animals[Math.floor(Math.random() * animals.length)];\n    let tmpAnimal2;\n    let tmpAnimal3;\n    do {\n      tmpAnimal2 = animals[Math.floor(Math.random() * animals.length)];\n    } while (tmpAnimal2 === tmpAnimal1);\n    do {\n      tmpAnimal3 = animals[Math.floor(Math.random() * animals.length)];\n    } while (tmpAnimal3 === tmpAnimal1 || tmpAnimal3 === tmpAnimal2);\n    // checks if all drawn animals have been guessed yet\n    if (\n      animalsGuessed.includes(tmpAnimal1) &&\n      animalsGuessed.includes(tmpAnimal2) &&\n      animalsGuessed.includes(tmpAnimal3)\n    ) {\n      //chooses random number and assigns random not guessed animal to appropriate tmpAnimal variable\n      let index = Math.floor(Math.random() * 3);\n      if (index === 1) {\n        tmpAnimal1 =\n          animalsNotGuessed[\n            Math.floor(Math.random() * animalsNotGuessed.length)\n          ];\n      } else if (index === 2) {\n        tmpAnimal2 =\n          animalsNotGuessed[\n            Math.floor(Math.random() * animalsNotGuessed.length)\n          ];\n      } else {\n        tmpAnimal3 =\n          animalsNotGuessed[\n            Math.floor(Math.random() * animalsNotGuessed.length)\n          ];\n      }\n    }\n    setCard1(tmpAnimal1);\n    setCard2(tmpAnimal2);\n    setCard3(tmpAnimal3);\n  }\n\n  function playRound(selectedAnimal) {\n    if (animalsGuessed.includes(selectedAnimal)) {\n      setResultText1('Sorry :(');\n      setResultText2('You lost');\n      messageDisplay();\n    } else {\n      let tmpScore = currentScore + 1;\n      checkScore(tmpScore);\n      if (tmpScore !== animals.length) {\n        const cardDivs = document.querySelectorAll('.card-div');\n        cardDivs.forEach((cardDiv) => {\n          cardDiv.classList.add('hidecard');\n          cardDiv.classList.add('unclickable');\n          cardDiv.classList.remove('showup');\n        });\n        setTimeout(() => {\n          setAnimalsGuessed(animalsGuessed.concat(selectedAnimal));\n          setAnimalsNotGuessed(\n            animalsNotGuessed.filter((x) => x != selectedAnimal)\n          );\n          cardDivs.forEach((cardDiv) => {\n            cardDiv.classList.remove('hidecard');\n            cardDiv.classList.remove('unclickable');\n            cardDiv.classList.add('showup');\n          });\n        }, 1600);\n      }\n    }\n  }\n\n  function checkScore(score) {\n    if (score > topScore) {\n      setTopScore(score);\n      localStorage.setItem('topScore', score);\n    }\n    setCurrentScore(score);\n    if (score === animals.length) {\n      setResultText1('Congratulations!!!');\n      setResultText2('You won!');\n      messageDisplay();\n    }\n  }\n\n  function tryAgain() {\n    const message = document.querySelector(`#game-result-message`);\n    message.classList.add('unclickable');\n    message.classList.remove('unhide');\n    const restartButton = document.querySelector('#restart-game-button');\n    restartButton.classList.remove('unclickable');\n    const cards = document.querySelectorAll('.card-div');\n    cards.forEach((card) => {\n      card.classList.remove('unclickable');\n    });\n    newGame();\n  }\n\n  function newGame() {\n    setResultText1('');\n    setResultText2('');\n    setCurrentScore(0);\n    const cardDivs = document.querySelectorAll('.card-div');\n    cardDivs.forEach((cardDiv) => {\n      cardDiv.classList.add('hidecard');\n      cardDiv.classList.add('unclickable');\n      cardDiv.classList.remove('showup');\n    });\n    setTimeout(() => {\n      cardDivs.forEach((cardDiv) => {\n        cardDiv.classList.remove('hidecard');\n        cardDiv.classList.remove('unclickable');\n        cardDiv.classList.add('showup');\n      });\n\n      setAnimalsGuessed([]);\n      setAnimalsNotGuessed(animals);\n    }, 1600);\n  }\n\n  function messageDisplay() {\n    const message = document.querySelector(`#game-result-message`);\n    message.classList.add('unhide');\n    message.classList.remove('unclickable');\n    const restartButton = document.querySelector('#restart-game-button');\n    restartButton.classList.add('unclickable');\n    const cards = document.querySelectorAll('.card-div');\n    cards.forEach((card) => {\n      card.classList.add('unclickable');\n      card.classList.add('hide-card');\n    });\n  }\n  return (\n    <div id=\"main-content\">\n      <div id=\"background-image-photo\"></div>\n      <Scoreboard currentScore={currentScore} topScore={topScore} />\n      <div className=\"card-div\" onClick={() => playRound(card1)}>\n        <Card value={card1} />\n      </div>\n      <div className=\"card-div\" onClick={() => playRound(card2)}>\n        <Card value={card2} />\n      </div>\n      <div className=\"card-div\" onClick={() => playRound(card3)}>\n        <Card value={card3} />\n      </div>\n      <button id=\"restart-game-button\" type=\"button\" onClick={newGame}>\n        Restart\n      </button>\n      <div id=\"game-result-message\" className=\"unclickable\">\n        <p>{resultText1}</p> <p>{resultText2}</p>\n        <button id=\"try-again-button\" type=\"button\" onClick={tryAgain}>\n          Try Again\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MainContent;\n","import React from 'react';\nimport './styles/Footer.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      <span>The Odin Project | Memory Card Game</span>\n      <span>Piotr Lubiecki | 2021</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import './App.css';\nimport Header from './components/Header';\nimport MainContent from './components/MainContent';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Header />\n      <MainContent />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}